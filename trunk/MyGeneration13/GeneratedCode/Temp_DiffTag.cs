using System;
using System.Collections;


namespace Business.Data
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class Temp_DiffTag
	{

		#region Private Members

		private string m_objectid; 
		private string m_vdcstag; 
		private string m_dbftag; 
		private string m_dbfdatatype; 
		private string m_dbfdesc; 		
		#endregion

		#region Constuctor

		public Temp_DiffTag()
		{
			m_objectid = String.Empty; 
			m_vdcstag = String.Empty; 
			m_dbftag = String.Empty; 
			m_dbfdatatype = String.Empty; 
			m_dbfdesc = String.Empty; 
		}

		#region Public Properties
			
		public string Objectid
		{
			get { return m_objectid; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Objectid", value, value.ToString());
				
				m_objectid = value;
			}
		}
			
		public string VdcsTag
		{
			get { return m_vdcstag; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for VdcsTag", value, value.ToString());
				
				m_vdcstag = value;
			}
		}
			
		public string DbfTag
		{
			get { return m_dbftag; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for DbfTag", value, value.ToString());
				
				m_dbftag = value;
			}
		}
			
		public string DbfDataType
		{
			get { return m_dbfdatatype; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for DbfDataType", value, value.ToString());
				
				m_dbfdatatype = value;
			}
		}
			
		public string DbfDesc
		{
			get { return m_dbfdesc; }

			set	
			{	
				if(  value != null &&  value.Length > 0)
					throw new ArgumentOutOfRangeException("Invalid value for DbfDesc", value, value.ToString());
				
				m_dbfdesc = value;
			}
		}
			
				
		#endregion 

		#region Private Accessors for NHibernate
		
		
		private string m_ObjectID
		{
			get { return m_objectid; }
			set { m_objectid = value; }
		}

		
		private string m_VdcsTag
		{
			get { return m_vdcstag; }
			set { m_vdcstag = value; }
		}

		
		private string m_DbfTag
		{
			get { return m_dbftag; }
			set { m_dbftag = value; }
		}

		
		private string m_dbfDataType
		{
			get { return m_dbfdatatype; }
			set { m_dbfdatatype = value; }
		}

		
		private string m_dbfDesc
		{
			get { return m_dbfdesc; }
			set { m_dbfdesc = value; }
		}

		#endregion // Internal Accessors for NHibernate 

		#region Public Functions

		#endregion //Public Functions

		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			Temp_DiffTag castObj = (Temp_DiffTag)obj; 
			return castObj.GetHashCode() == this.GetHashCode();
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return this.GetType().FullName.GetHashCode();
				
		}
		#endregion
			}
}
