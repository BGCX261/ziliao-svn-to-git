using System;
using System.Collections;


namespace Business.Data
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class Temp_AlgName
	{

		#region Private Members

		private string m_algname; 
		private string m_funcname; 
		private string m_blockpointx; 
		private string m_blockpointy; 		
		#endregion

		#region Constuctor

		public Temp_AlgName()
		{
			m_algname = String.Empty; 
			m_funcname = String.Empty; 
			m_blockpointx = String.Empty; 
			m_blockpointy = String.Empty; 
		}

		#region Public Properties
			
		public string AlgName
		{
			get { return m_algname; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for AlgName", value, value.ToString());
				
				m_algname = value;
			}
		}
			
		public string FuncName
		{
			get { return m_funcname; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for FuncName", value, value.ToString());
				
				m_funcname = value;
			}
		}
			
		public string BlockPointx
		{
			get { return m_blockpointx; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for BlockPointx", value, value.ToString());
				
				m_blockpointx = value;
			}
		}
			
		public string BlockPointy
		{
			get { return m_blockpointy; }

			set	
			{	
				if(  value != null &&  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for BlockPointy", value, value.ToString());
				
				m_blockpointy = value;
			}
		}
			
				
		#endregion 

		#region Private Accessors for NHibernate
		
		
		private string m_AlgName
		{
			get { return m_algname; }
			set { m_algname = value; }
		}

		
		private string m_FuncName
		{
			get { return m_funcname; }
			set { m_funcname = value; }
		}

		
		private string m_BlockPointX
		{
			get { return m_blockpointx; }
			set { m_blockpointx = value; }
		}

		
		private string m_BlockPointY
		{
			get { return m_blockpointy; }
			set { m_blockpointy = value; }
		}

		#endregion // Internal Accessors for NHibernate 

		#region Public Functions

		#endregion //Public Functions

		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			Temp_AlgName castObj = (Temp_AlgName)obj; 
			return castObj.GetHashCode() == this.GetHashCode();
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			return this.GetType().FullName.GetHashCode();
				
		}
		#endregion
			}
}
